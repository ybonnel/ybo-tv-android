apply plugin: 'com.android.application'

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:1.0.0'
    }
}

repositories {
    mavenCentral()
}

dependencies {
    compile fileTree(dir: 'libs', include: '*.jar')
	compile 'com.actionbarsherlock:actionbarsherlock:4.4.0@aar'
	compile 'com.android.support:support-v4:20.0.+'
    compile group: 'com.google.code.gson', name: 'gson', version:'2.2.2'
    compile group: 'com.omertron', name: 'themoviedbapi', version:'3.4'
}


tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

android {

	packagingOptions {
		exclude 'META-INF/LICENSE.txt'
		exclude 'META-INF/NOTICE.txt'
	}
    compileSdkVersion 16
    buildToolsVersion "20.0.0"

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src/main/java']
            resources.srcDirs = ['src/main/java']
            aidl.srcDirs = ['src/main/java']
            renderscript.srcDirs = ['src/main/java']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
        }

        // Move the tests to tests/java, tests/res, etc...
        instrumentTest.setRoot('tests')

        // Move the build types to build-types/<type>
        // For instance, build-types/debug/java, build-types/debug/AndroidManifest.xml, ...
        // This moves them out of them default location under src/<type>/... which would
        // conflict with src/ being used by the main source set.
        // Adding new build types or product flavors should be accompanied
        // by a similar customization.
        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }

    File signFile = rootProject.file('sign.properties');
    if (signFile.exists()) {
        Properties p = new Properties()
        p.load(new FileInputStream(signFile))
        signingConfigs {
            release {
                storeFile file("ybonnel.keystore")
                keyAlias p.keyAlias
                storePassword p.storePassword
                keyPassword p.keyPassword
            }
        }
        buildTypes {
            release {
                signingConfig signingConfigs.release
            }
        }
    }
}
